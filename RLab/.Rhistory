2.5 - 3 / 6 + 3.14 * 2
20
2+3
2+3
2+3
2+3
2+3
3+4
5+9
2+3
3+4
5+9
2+3
3+4
5+9
(3+6)^8
(3+6)*8
2^3
log(10) + 5
log(10)+5
sqrt(25)
sqrt(10)
max(5,3)
log(10)
log10(10)
d <- c(101:200)
d
d
d
d
d
d
d
d
d
d
d
d[10]
d[c(91:100)]
d[seq(2, 100, 2)]
d.20 <- d[c(1:20)]
d.20
# 7
d.20[-5]
# 8
d.20[-c(5, 7, 9)]
d <- c(1, 2, 3, 14, 15, 16, 7, 8, 9, 10)
median(d)
z <- sort(d)
z
d <- c(1, 2, 13, 14, 15, 16, 7, 8, 9, 10)
z <- sort(d)
z
median(d)
d <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
d >= 5
d[d>5]
sumc(d>5)
sum(d>5)
d <- 1:50
d1 <- 1:50
d2 <- 51:100
d1
d2
#2
d1 + d2
d2 - d1
d1 * d2
d2 / d1
#3
sum(d1)
sum(d2)
#4
sum(d1+d2)
#5
max(d2)
min(d2)
#6
mean(d2)
mean(d1)
#6
mean(d2) - mean(d1)
#7
sort(d1, decreasing = TRUE)
#8
d3 <- c(sort(d1, decreasing = TRUE)[1:10], sort(d2, decreasing = TRUE)[1:10])
d3
v1 <- 51:90
#9
v1[v1 < 60]
#10
v1[v1 > 65]
#10
sum(v1 > 70)
#10
sum(v1 < 70)
#11
sum(v1[v1 > 65])
#12
v1[v1 > 60 & v < 73]
#12
v1[v1 > 60 & v1 < 73]
#13
v1[v1 > 80 & v1 < 65]
#13
v1[v1 < 65 | v1 > 80]
#14
v1[v1 %% 7 == 3]
#15
v1[v1 %% 2 == 0]
#15
sum(v1[v1 %% 2 == 0])
#16
v1[v1 %% 2 == 1 | v1 > 80]
#17
v1[v1 %% 3 == 0 | v1 %% 5 == 0]
#17
v1[v1 %% 3 == 0 && v1 %% 5 == 0]
#17
v1[v1 %% 3 == 0 & v1 %% 5 == 0]
v1[v1 %% 3 == 0]
v1[v1 %% 5 == 0]
num <- round(runif(1) * 100, digits = 0)
guess <- -1
cat('Guess a number between 0 and 100.\n')
while (guess != num) {
guess <- readline(prompt = "Guess number: ")  # character type
guess <- as.integer(guess)
if (guess == num) {
cat("Conguraturations,", num, "is right.\n")
}
else if (guess < num) {
cat("It's smaller!\n")
}
else if (guess > num) {
cat("It's bigger!\n")
}
}
setwd("C:/Work/03.R/RLab/RLab")
while (TRUE) {
num1 <- readline(prompt = "Guess number A: ") # character type
num1 <- as.integer(num1)
num2 <- readline(prompt = "Guess number B: ") # character type
num2 <- as.integer(num2)
if (num1 == 0 & num2 == 0) {
print('bye')
break
}
print(num1 + num2)
print(num1 * num2)
}
knit_with_parameters('C:/Work/03.R/RLab/RLab/Script.Rmd')
library(wordcloud)
library(pdftools)
library(stringr)
library(wordcloud)
library(pdftools)
library(stringr)
library(wordcloud)
library(pdftools)
library(stringr)
getwd()
bts_text <- pdf_text('BTS_(band).pdf')
library(wordcloud)
library(pdftools)
library(stringr)
library(wordcloud)
library(pdftools)
library(stringr)
library(wordcloud)
library(pdftools)
library(stringr)
library(RColorBrewer)
library(wordcloud)
library(pdftools)
library(stringr)
bts_text <- pdf_text('./BTS_(band).pdf') # return character vector of ' pages '
bts_text <- tolower(bts_text) # return character vector
bts_text_sent <- strsplit(bts_text, split = '\\.') # return list of 'sentences'
bts_text_word <- strsplit(unlist(bts_text_sent), split = ' ') # return list of 'words'
bts_text_word <- unlist(bts_text_word) # return character vector of 'words'
bts_text_word_main <- bts_text_word[nchar(bts_text_word) > 0] # remove blank. 27582 to 15471
# remove reference section
which(str_detect(bts_text_word_main, 'references'))
bts_text_word_main <- bts_text_word_main[1:6340]
bts_text_word_freq <- sort(table(bts_text_word_main), decreasing = TRUE)
# wordcloud
wordcloud(words = names(bts_text_word_freq), freq = bts_text_word_freq, random.order = FALSE, min.freq = 5, scale = c(4, 0.3))
knit_with_parameters('D:/Work/02.R/RLab/RLab/BTS.Rmd')
# knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
knitr::opts_knit$set(root.dir = getwd())
library(RColorBrewer)
library(wordcloud)
library(pdftools)
library(stringr)
print(getwd())
bts_text <- pdf_text('./BTS_(band).pdf') # return character vector of ' pages '
bts_text <- tolower(bts_text) # return character vector
bts_text_sent <- strsplit(bts_text, split = '\\.') # return list of 'sentences'
bts_text_word <- strsplit(unlist(bts_text_sent), split = ' ') # return list of 'words'
bts_text_word <- unlist(bts_text_word) # return character vector of 'words'
bts_text_word_main <- bts_text_word[nchar(bts_text_word) > 0] # remove blank. 27582 to 15471
# remove reference section
which(str_detect(bts_text_word_main, 'references'))
bts_text_word_main <- bts_text_word_main[1:6340]
bts_text_word_freq <- sort(table(bts_text_word_main), decreasing = TRUE)
# wordcloud
wordcloud(words = names(bts_text_word_freq), freq = bts_text_word_freq, random.order = FALSE, min.freq = 5, scale = c(4, 0.3))
bts_text <- pdf_text('BTS_(band).pdf') # return character vector of 'pages'
library(RColorBrewer)
library(wordcloud)
library(pdftools)
library(stringr)
bts_text <- pdf_text('BTS_(band).pdf') # return character vector of 'pages'
bts_text <- tolower(bts_text) # return character vector
bts_text_sent <- strsplit(bts_text, split = '\\.') # return list of 'sentences'
bts_text_word <- strsplit(unlist(bts_text_sent), split = ' ') # return list of 'words'
bts_text_word <- unlist(bts_text_word) # return character vector of 'words'
bts_text_word_main <- bts_text_word[nchar(bts_text_word) > 0] # remove blank. 27582 to 15471
# remove reference section
which(str_detect(bts_text_word_main, 'references'))
bts_text_word_main <- bts_text_word_main[1:6340]
bts_text_word_freq <- sort(table(bts_text_word_main), decreasing = TRUE)
# wordcloud
wordcloud(words = names(bts_text_word_freq), freq = bts_text_word_freq, random.order = FALSE, min.freq = 5, scale = c(4, 0.3))
library(RColorBrewer)
library(wordcloud)
library(pdftools)
library(stringr)
bts_text <- pdf_text('C:/Work/03.R/RLab/RLab/BTS_(band).pdf') # return character vector of ' pages '
library(RColorBrewer)
library(wordcloud)
library(pdftools)
library(stringr)
bts_text <- pdf_text('BTS_(band).pdf') # return character vector of ' pages '
bts_text <- tolower(bts_text) # return character vector
bts_text_sent <- strsplit(bts_text, split = '\\.') # return list of 'sentences'
bts_text_word <- strsplit(unlist(bts_text_sent), split = ' ') # return list of 'words'
bts_text_word <- unlist(bts_text_word) # return character vector of 'words'
bts_text_word_main <- bts_text_word[nchar(bts_text_word) > 0] # remove blank. 27582 to 15471
# remove reference section
which(str_detect(bts_text_word_main, 'references'))
bts_text_word_main <- bts_text_word_main[1:6340]
bts_text_word_freq <- sort(table(bts_text_word_main), decreasing = TRUE)
# wordcloud
wordcloud(words = names(bts_text_word_freq), freq = bts_text_word_freq, random.order = FALSE, min.freq = 5, scale = c(4, 0.3))
library("knitr", lib.loc="~/R/win-library/3.5")
detach("package:knitr", unload=TRUE)
library("knitr", lib.loc="~/R/win-library/3.5")
detach("package:knitr", unload=TRUE)
str_length(str1)[1:4]
str1 <- c('I', 'am', 'a', 'student')
str2 <- paste(str1, collapse = ' ')
str_trim(str2)
str_which(str2, 'a')
str_extract('a')
str_extract(str2, 'a')
str_extract_all(str2, 'a')
str_replace(str2, 'a')
str_replace(str2, 'a', 'z')
str_replace_all(str2, 'a', 'z')
str_extract(str2, 'a')
str_extract_all(str2, 'a')
str_which(str2, 'a')
str_which(str2, 'I')
str_which(str2, 't')
load("C:/Work/03.R/RLab/RLab/bts_rtweet.RData")
View(bts_rtweet)
View(bts_rtweet)
load("C:/Work/03.R/RLab/RLab/.RData")
load("C:/Work/03.R/RLab/RLab/bts_rtweet.RData")
library(RColorBrewer)
library(wordcloud)
library(KoNLP)
useSejongDic()
pal2 <- brewer.pal(8, 'Dark2')
text <- readLines(file.choose())
text <- readLines(file.choose())
감사합니다
library('devtools')
install.packages('rlang')
library('devtools')
install_github('dkahle/ggmap')
library("ggmap", lib.loc="~/R/win-library/3.5")
remove.packages("ggmap", lib="~/R/win-library/3.5")
install_github('dkahle/ggmap', ref="tidyup")
install_github('dkahle/ggmap', ref="tidyup")
remove.packages("purrr")
install.packages('purrr')
install.packages("purrr")
install_github('dkahle/ggmap', ref="tidyup")
library('devtools')
install_github('dkahle/ggmap', ref="tidyup")
library('ggmap')
register_google(key='AIzaSyAGZxFPmaguvtFhdYNrN-c3GsaJkchLkso')
names <- names <- c('용두암', '성산일출봉', '정방폭포', '중문관광단지', '한라산1100고지', '차귀도')
addr <- c('제주시 용두암길 15',
'서귀포시 성산읍 성산리',
'서귀포시 동홍동 299-3',
'서귀포시 중문동 2624-1',
'서귀포시 색달동 산1-2',
'제주시 한경면 고산리 125')
gc <- geocode(enc2utf8(addr))
gc
library(lubridate)
x <- read.csv('subway.csv', header = TRUE, sep = ",", encoding = "UTF-8")
View(x)
View(x)
x <- read.csv('subway.csv', header = TRUE, sep = ",")
View(x)
View(x)
library(ggplot2)
library(ggmap)
Sys.setlocale("LC_ALL", "English")
subway <- read.csv('subway.csv', header = TRUE, stringsAsFactors = FALSE, encoding = "UTF-8")
# change date format
class(subway[, 'income_date']) <- 'character'
subway[, 'income_date'] <- as.Date(subway[, 'income_date'], format = '%Y%m%d')
unique(format(subway[, 'income_date'], '%Y'))
# drop 2014
idx <- format(subway[, 'income_date'], '%Y') == '2014'
unique(format(subway[idx, 'income_date'], '%m'))
subway2 <- subset(subway, subset = format(income_date, '%Y') != '2014')
# purge () from station name
sort(unique(subway[, 'stat_name']))
idx <- grep('\\(', subway2$stat_name)
unique(subway2$stat_name[idx])
subway2$stat_name[idx] = substr(subway2$stat_name[idx], 1, nchar(subway2$stat_name[idx]) - 3)
# make year, month column
year <- format(subway2$income_date, '%Y')
month <- format(subway2$income_date, '%m')
subway2 <- cbind(subway2, year, month)
subname <- read.csv('subway_latlong.csv', header = TRUE, stringsAsFactors = FALSE, encoding = "UTF-8")
#
tot <- aggregate(subway2[, 'on_tot'], by = list(stat_name = subway2$stat_name), FUN = sum)
cc <- merge(x = tot, y = subname, by.x = 'stat_name', by.y = 'STATION_NM')
names(cc)[2] = 'on_tot'
data <- subset(subway3, income_date == '2012-05-08', select = c('XPOINT_WGS', 'YPOINT_WGS', 'on_tot', 'stat_name', 'LINE_NUM'))
df2 <- data.frame(stat_name = cc$stat_name, line_num = cc$LINE_NUM, on_tot = cc$x)
df2 <- df2[with(df2, order(line_num)),]
df2 <- df2[order(df2$line_num),]
df2 <- data.frame(stat_name = cc$stat_name, line_num = cc$LINE_NUM, on_tot = cc$x)
#
tot <- aggregate(subway2[, 'on_tot'], by = list(stat_name = subway2$stat_name), FUN = sum)
cc <- merge(x = tot, y = subname, by.x = 'stat_name', by.y = 'STATION_NM')
View(cc)
View(cc)
names(cc)[2] = 'on_tot'
View(cc)
View(cc)
data <- subset(subway3, income_date == '2012-05-08', select = c('XPOINT_WGS', 'YPOINT_WGS', 'on_tot', 'stat_name', 'LINE_NUM'))
#
tot <- aggregate(subway2[, 'on_tot'], by = list(stat_name = subway2$stat_name), FUN = sum)
cc <- merge(x = tot, y = subname, by.x = 'stat_name', by.y = 'STATION_NM')
names(cc)[2] = 'on_tot'
df2 <- data.frame(stat_name = cc$stat_name, line_num = cc$LINE_NUM, on_tot = cc$x)
df2 <- data.frame(stat_name = cc$stat_name, line_num = cc$LINE_NUM, on_tot = cc$on_tot)
df2 <- df2[with(df2, order(line_num)),]
df2 <- df2[order(df2$line_num),]
df2$stat_name <- factor(df2$stat_name, levels = df2$stat_name)
register_google(key = "AIzaSyBddqwy-oiScW2AApscMfEraJ4EhxFwF04")
map_seoul <- get_map(location = c(lon = 126.97, lat = 37.55), zoom = 11, maptype = 'roadmap')
mm <- ggmap(map_seoul)
mm2 <- mm + geom_point(aes(x = YPOINT_WGS, y = XPOINT_WGS, size = on_tot, colour = as.factor(LINE_NUM)), data = cc)
mm2 + scale_size_area(name = c('ž?°???')) + scale_colour_discrete(name = c('?뼱')) + labs(x = '?浵', y = '��??')
library("class", lib.loc="C:/Program Files/R/R-3.5.2/library")
detach("package:class", unload=TRUE)
